/* Include Files */
#include <math.h>
#include <Eigen/Core>

// Autogen function frmo Matlab
void B_tau_sol1(const double xi[6], double X, double B_tau[42])
{
  double a;
  double a_tmp;
  double b_a;
  double c_a;
  double d_a;
  double e_a;
  double f_a;
  double g_a;
  double h_a;
  double i_a;
  double t100;
  double t101;
  double t102_tmp;
  double t104;
  double t107;
  double t109;
  double t113;
  double t115;
  double t117;
  double t118;
  double t12;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t131;
  double t134;
  double t136;
  double t137;
  double t138;
  double t139;
  double t141;
  double t142;
  double t143;
  double t144;
  double t146;
  double t147;
  double t148;
  double t149;
  double t15;
  double t150;
  double t151;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t158;
  double t161;
  double t162;
  double t165;
  double t166;
  double t17;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t177;
  double t179;
  double t18;
  double t181;
  double t182;
  double t183;
  double t185;
  double t186;
  double t186_tmp;
  double t187;
  double t189;
  double t190;
  double t190_tmp_tmp;
  double t191;
  double t192;
  double t193;
  double t199;
  double t2;
  double t202;
  double t205;
  double t206;
  double t207;
  double t207_tmp;
  double t21;
  double t213;
  double t215;
  double t216;
  double t217;
  double t218;
  double t219;
  double t21_tmp;
  double t223;
  double t224;
  double t225;
  double t227;
  double t23;
  double t230;
  double t232;
  double t237;
  double t238;
  double t238_tmp;
  double t24;
  double t243;
  double t247;
  double t25;
  double t26;
  double t27;
  double t271;
  double t29;
  double t292;
  double t294;
  double t3;
  double t30;
  double t33;
  double t35;
  double t39;
  double t4;
  double t41;
  double t42;
  double t43;
  double t44;
  double t46;
  double t48;
  double t49;
  double t5;
  double t52;
  double t56;
  double t63;
  double t64;
  double t65_tmp;
  double t66;
  double t67;
  double t69;
  double t73_tmp;
  double t74;
  double t74_tmp;
  double t75;
  double t77;
  double t78;
  double t79;
  double t81;
  double t85;
  double t86;
  double t87;
  double t88_tmp;
  double t89;
  double t89_tmp;
  double t90;
  double t91;
  double t94;
  double t95;
  double t96;
  double t97;
  /*     This function was generated by the Symbolic Math Toolbox version 9.3.
   */
  /*     24-Apr-2023 14:50:25 */
  /*  Manual Additional Part */
  /*  Autogen code */
  t2 = X * xi[0];
  t3 = X * xi[1];
  t4 = X * X;
  t5 = X * 20.0;
  t12 = X / 5.0;
  t15 = xi[2] * 336.0;
  t17 = X * 3.1415926535897931 * 0.7142857142857143;
  t18 = X * 3.1415926535897931 * 400.0;
  t21_tmp = X * xi[2];
  t21 = t21_tmp * 320.0;
  t23 = X * 0.057142857142857141;
  t24 = X * 0.11428571428571428;
  t25 = xi[0] * 882.0;
  t26 = xi[2] * 1029.0;
  t27 = xi[0] * 1764.0;
  t29 = xi[3] * 700.0;
  t30 = xi[5] * 700.0;
  t33 = xi[4] * 4900.0;
  t35 = X * 3.1415926535897931 * 1.4285714285714286;
  t41 = t21_tmp * 980.0;
  t52 = xi[1] * 9261.0;
  t56 = xi[5] * 29400.0;
  t63 = t21_tmp * 16800.0;
  t65_tmp = X * xi[5];
  t69 = xi[1] * 1543.5;
  t73_tmp = X * xi[3];
  t74_tmp = X * xi[4];
  t74 = t74_tmp * 122500.0;
  t75 = t73_tmp * 280000.0;
  t39 = t3 * 700.0;
  t42 = t2 * 1680.0;
  t43 = t3 * 2940.0;
  t44 = t2 * 3360.0;
  t46 = t2 * 4900.0;
  t48 = cos(t17);
  t49 = sin(t17);
  t64 = t3 * 17640.0;
  t66 = cos(t35);
  t67 = sin(t35);
  t78 = xi[1] * 1.7320508075688772 * 147.0;
  t79 = xi[2] * 1.7320508075688772 * 147.0;
  t35 = xi[2] * t4;
  t81 = t35 * 16000.0;
  t85 = xi[1] * 1.7320508075688772 * 3087.0;
  t86 = t3 * 1.7320508075688772 * 140.0;
  t17 = t21_tmp * 1.7320508075688772;
  t87 = t17 * 140.0;
  t88_tmp = X * t3;
  t89_tmp = X * t2;
  t89 = t89_tmp * 123300.0;
  t90 = t88_tmp * 288400.0;
  t91 = t89_tmp * 491600.0;
  t100 = xi[4] * 1.7320508075688772 * 9800.0;
  t101 = 1.7320508075688772 * t56;
  t102_tmp = t2 - xi[4];
  t104 = t3 * 1.7320508075688772 * 5880.0;
  t117 = t2 * 1.7320508075688772 * 9800.0;
  t118 = t17 * 51450.0;
  t138 = t89_tmp * 1.7320508075688772 * 1600.0;
  t139 = t88_tmp * 1.7320508075688772 * 2800.0;
  t156 = t35 * 1.7320508075688772 * 49000.0;
  t77 = t48 * t48;
  t94 = t48 / 5.0;
  t95 = t48 * 140.0;
  t96 = t49 / 5.0;
  t97 = t49 * 140.0;
  t107 = t48 * 0.11428571428571428;
  t109 = t48 * 560.0;
  t113 = xi[3] * t48 * 2800.0;
  t115 = xi[3] * t49 * 2800.0;
  a = fabs(t102_tmp + 0.11428571428571428);
  t123 = t48 * 14700.0;
  t124 = t49 * 14700.0;
  t125 = t25 * t66;
  t127 = t25 * t67;
  t129 = t3 * t48 * 2800.0;
  t131 = t3 * t49 * 2800.0;
  t134 = xi[0] * (t24 - 0.12);
  t136 = xi[2] * (t24 - 0.12);
  t137 = xi[2] * (t23 - 0.06);
  t141 = xi[5] * t48 * -14700.0;
  t142 = xi[0] * t67 * -882.0;
  t143 = X * t48 * 3.1415926535897931 * 10500.0;
  t144 = X * t49 * 3.1415926535897931 * 10500.0;
  t146 = t43 * t66;
  t17 = t21_tmp * t48;
  t147 = t17 * 8400.0;
  t148 = t17 * 25725.0;
  t150 = t65_tmp * t48 * 14000.0;
  t151 = t42 * t67;
  t17 = t21_tmp * t49;
  t153 = t17 * 8400.0;
  t154 = t17 * 25725.0;
  t155 = t65_tmp * t49 * 14000.0;
  t157 = t66 * t69;
  t158 = t67 * t69;
  t161 = t2 * t66 * -1680.0;
  t162 = t3 * t66 * -2940.0;
  t165 = t2 * t67 * -1680.0;
  t166 = t3 * t67 * -2940.0;
  t17 = t35 * t48;
  t172 = t17 * 8000.0;
  t35 *= t49;
  t173 = t35 * 8000.0;
  t174 = xi[1] * t66 * -1543.5;
  t175 = t4 * t48 * 3.1415926535897931 * 10000.0;
  t176 = t4 * t49 * 3.1415926535897931 * 10000.0;
  t177 = t89_tmp * t66 * 800.0;
  t179 = t88_tmp * t66 * 1400.0;
  t181 = t17 * 24500.0;
  t182 = t89_tmp * t67 * 800.0;
  t183 = t88_tmp * t67 * 1400.0;
  t185 = t35 * 24500.0;
  t186_tmp = t48 * (t5 - 21.0) * 3.1415926535897931;
  t186 = t186_tmp * 5.0;
  t17 = t49 * (t5 - 21.0) * 3.1415926535897931;
  t187 = t17 * 5.0;
  t271 = xi[1] * t48;
  t189 = t271 * (t5 - 21.0) * 7.0;
  t190_tmp_tmp = xi[2] * t48;
  t35 = t190_tmp_tmp * (t5 - 21.0);
  t190 = t35 * 4.0;
  t191 = xi[0] * t49 * (t5 - 21.0) * 4.0;
  t294 = xi[1] * t49;
  t192 = t294 * (t5 - 21.0) * 7.0;
  t292 = xi[2] * t49;
  t4 = t292 * (t5 - 21.0);
  t193 = t4 * 4.0;
  t199 = t17 * 20.0;
  t202 = t35 * 49.0;
  t205 = t4 * 49.0;
  t216 = t271 * (t12 - 0.21);
  t217 = t190_tmp_tmp * (t12 - 0.21);
  t218 = t294 * (t12 - 0.21);
  t219 = t292 * (t12 - 0.21);
  t223 = t48 * (t24 - 0.12) * 3.1415926535897931 * 0.7142857142857143;
  t224 = t49 * (t24 - 0.12) * 3.1415926535897931 * 0.7142857142857143;
  t225 = t48 * (t12 - 0.21) * 3.1415926535897931 * 0.7142857142857143;
  t227 = t49 * (t12 - 0.21) * 3.1415926535897931 * 0.7142857142857143;
  t35 = 0.1818653347947321 - X * 1.7320508075688772 / 10.0;
  t17 = -xi[2] * t35;
  t126 = xi[5] * t123;
  t128 = xi[5] * t124;
  t149 = xi[2] * t77 * 693.0;
  t171 = t21_tmp * t77 * 660.0;
  t207_tmp = xi[3] + t3;
  t207 = t207_tmp + t136;
  t213 = t48 * t136;
  t215 = t49 * t136;
  t230 = (t207_tmp + 0.17320508075688773) + t137;
  t232 = (t207_tmp - 0.17320508075688773) + t137;
  t237 = (t102_tmp + t17) + 0.057142857142857141;
  t238_tmp = xi[4] - t2;
  t238 = (t238_tmp + t17) - 0.057142857142857141;
  a_tmp = t30 + xi[0] * t48 * (t5 - 21.0) * 4.0;
  b_a = (a_tmp + t192) + 700.0;
  c_a = ((t30 + t189) + t191) + 700.0;
  d_a = (((-t29 - t39) + t97) + t186) + t190;
  t4 = t33 - t46;
  t190_tmp_tmp = (t4 + t49 * 560.0) + t186_tmp * 20.0;
  e_a = t190_tmp_tmp + t202;
  t206 = (xi[5] - t134) + 1.0;
  t136 = fabs(t207);
  f_a = fabs(t230);
  g_a = fabs(t232);
  h_a = fabs(t238);
  i_a = fabs(t237);
  t17 = xi[5] - xi[0] * (t23 - 0.06);
  t243 = (t17 + -xi[1] * t35) + 1.0;
  t247 = (t17 + xi[1] * t35) + 1.0;
  t23 = (a_tmp - t192) + 700.0;
  t192 = ((t30 + t191) - t189) + 700.0;
  a_tmp = t29 + t39;
  t186_tmp = ((a_tmp + t97) + t186) - t190;
  t77 = ((a_tmp - t95) + t187) - t193;
  t292 = ((a_tmp + t95) - t187) - t193;
  t294 = t190_tmp_tmp - t202;
  t271 = (((t46 - t33) - t109) + t199) + t205;
  t190_tmp_tmp = ((t4 + t109) + t205) - t199;
  t17 = fabs(t206);
  t35 = fabs(t243);
  t4 = fabs(t247);
  t137 = 1.0 / sqrt((b_a * b_a * 49.0 + t271 * t271) + d_a * d_a * 49.0);
  t271 = 1.0 / sqrt((a * a + t17 * t17) + t136 * t136);
  t136 = 1.0 / sqrt((g_a * g_a + i_a * i_a) + t35 * t35);
  t35 = 1.0 / sqrt((f_a * f_a + h_a * h_a) + t4 * t4);
  t77 = 1.0 / sqrt((c_a * c_a * 49.0 + t294 * t294) + t77 * t77 * 49.0);
  t292 = 1.0 / sqrt((t192 * t192 * 49.0 + e_a * e_a) + t292 * t292 * 49.0);
  t294 = 1.0 / sqrt((t23 * t23 * 49.0 + t186_tmp * t186_tmp * 49.0) +
                    t190_tmp_tmp * t190_tmp_tmp);
  a_tmp = ((xi[2] * t5 - xi[2] * 21.0) + xi[3] * 350.0) + t3 * 350.0;
  t190_tmp_tmp = (xi[0] * 84.0 + xi[5] * 1400.0) - t2 * 80.0;
  a = ((t190_tmp_tmp + t78) - t86) + 1400.0;
  t17 = t2 * 1400.0 - xi[4] * 1400.0;
  b_a = ((t17 + t79) - t87) + 80.0;
  c_a = ((t190_tmp_tmp - t78) + t86) + 1400.0;
  d_a = ((t17 - t79) + t87) + 80.0;
  B_tau[0] =
      t271 *
      ((((((xi[0] * 441.0 + xi[5] * 3675.0) - t2 * 840.0) - t74_tmp * 30625.0) -
         t65_tmp * 3500.0) +
        t89_tmp * 31025.0) +
       3675.0) /
      30625.0;
  B_tau[1] = X * t207 * t271;
  B_tau[2] = (t24 - 0.12) * t207 * t271;
  B_tau[3] = t207 * t271;
  B_tau[4] = -(t102_tmp + 0.11428571428571428) * t271;
  B_tau[5] = t206 * t271;
  t190_tmp_tmp = (((t27 + t56) - t44) - t65_tmp * 28000.0) - t74_tmp * 490000.0;
  B_tau[6] = t35 *
             (((((((t190_tmp_tmp + t85) + t91) - t104) + t118) + t139) - t156) +
              29400.0) /
             490000.0;
  t271 = t65_tmp * 1.7320508075688772 * 28000.0;
  B_tau[7] =
      t35 *
      (((((((((((t52 - t63) - t64) + t75) + t81) + 1.7320508075688772 * t27) +
            t90) +
           50922.293742524991) +
          t101) +
         t138) -
        t2 * 1.7320508075688772 * 3360.0) -
       t271) /
      280000.0;
  t4 = ((xi[3] * 5600.0 + t21_tmp * 3260.0) + t3 * 5600.0) - xi[2] * 3423.0;
  B_tau[8] =
      (t5 - 21.0) /
      sqrt(((a_tmp + 60.6217782649107) * (a_tmp + 60.6217782649107) * 16.0 +
            a * a) +
           b_a * b_a) *
      ((t4 + t100) - t117) / 1400.0;
  B_tau[9] = t230 * t35;
  B_tau[10] = t238 * t35;
  B_tau[11] = t247 * t35;
  B_tau[12] =
      t136 *
      (((((((t190_tmp_tmp - t85) + t91) + t104) - t118) - t139) + t156) +
       29400.0) /
      490000.0;
  B_tau[13] =
      t136 *
      (((((((((((-t52 + t63) + t64) - t75) - t81) - t90) + 50922.293742524991) +
           t101) +
          t138) +
         xi[0] * 1.7320508075688772 * 1764.0) +
        1.7320508075688772 * -t44) -
       t271) *
      -3.5714285714285709E-6;
  B_tau[14] =
      (t5 - 21.0) /
      sqrt(((a_tmp - 60.6217782649107) * (a_tmp - 60.6217782649107) * 16.0 +
            c_a * c_a) +
           d_a * d_a) *
      ((t4 - t100) + t117) / 1400.0;
  B_tau[15] = t232 * t136;
  B_tau[16] = -t237 * t136;
  B_tau[17] = t243 * t136;
  t190_tmp_tmp = ((t42 - t25) + t74) - t89;
  t271 = ((t190_tmp_tmp + t124) + t125) + t128;
  B_tau[18] =
      t77 *
      ((((((((((t271 + t148) + t43 * t67) - t143) + t161) - t155) + t175) +
          t177) -
         t181) -
        t183) -
       xi[1] * t67 * 1543.5) *
      -0.04;
  t4 = ((-t43 + t69) + t73_tmp * 70000.0) + t88_tmp * 71400.0;
  B_tau[19] =
      t77 *
      (((((((((((((t4 + t127) - t123) + t141) + t150) + t153) + t157) - t144) +
            t162) +
           t165) +
          t176) +
         t179) +
        t182) -
       t173) *
      0.07;
  B_tau[20] =
      -(t12 - 0.21) * t77 *
      (((((((((t15 + t18) - 1319.4689145077132) - t21) + t33 * t48) + t115) +
          t131) +
         t149) -
        t171) -
       t2 * t48 * 4900.0);
  B_tau[21] = t77 * (((t207_tmp - t94) - t215) + t227) * 4900.0;
  t17 = t238_tmp + t49 * 0.11428571428571428;
  B_tau[22] = t77 * ((t17 - t217) + t223) * 4900.0;
  t35 = xi[5] + t49 * t134;
  B_tau[23] = t77 * ((t35 + t216) + 1.0) * 4900.0;
  B_tau[24] =
      t294 *
      (((((((((((((t190_tmp_tmp + t123) + t126) + t144) + t42 * t66) + t158) -
              t150) +
             t166) -
            t154) -
           t177) +
          t183) +
         t185) -
        t176) -
       xi[0] * t66 * 882.0) *
      -0.04;
  B_tau[25] =
      t294 *
      (((((((((((((t4 + t124) + t128) + t142) + t146) + t147) + t151) - t143) -
            t155) +
           t174) +
          t175) -
         t172) -
        t179) -
       t182) *
      0.07;
  B_tau[26] = -(t12 - 0.21) * t294 *
              (((((((((t18 - 1319.4689145077132) + t26) - t41) + t113) + t129) +
                  t46 * t49) -
                 t149) +
                t171) -
               xi[4] * t49 * 4900.0);
  B_tau[27] = t294 * (((t207_tmp + t96) - t213) + t225) * 4900.0;
  B_tau[28] = t294 * (((t238_tmp + t107) + t219) - t224) * 4900.0;
  t190_tmp_tmp = xi[5] + t48 * t134;
  B_tau[29] = t294 * ((t190_tmp_tmp - t218) + 1.0) * 4900.0;
  B_tau[30] =
      t292 *
      ((((((((((t271 - t148) + t158) - t143) + t161) + t166) - t155) + t175) +
         t177) +
        t181) +
       t183) *
      -0.04;
  B_tau[31] =
      t292 *
      (((((((((((((t4 + t123) + t126) + t142) + t144) + t151) + t153) + t157) +
            t162) -
           t150) +
          t179) -
         t173) -
        t176) -
       t182) *
      0.07;
  B_tau[32] =
      -(t12 - 0.21) * t292 *
      (((((((((t15 + 1319.4689145077132) - t18) - t21) + t115) + t46 * t48) +
          t131) +
         t149) -
        t171) -
       xi[4] * t48 * 4900.0);
  B_tau[33] = t292 * (((t207_tmp + t94) - t215) - t227) * 4900.0;
  B_tau[34] = t292 * ((t17 + t217) + t223) * 4900.0;
  B_tau[35] = t292 * ((t35 - t216) + 1.0) * 4900.0;
  B_tau[36] =
      t137 *
      ((((((((((((((((t25 - t42) - t74) + t89) + t125) - t123) + t141) + t150) +
               t158) -
              t144) +
             t161) +
            t166) -
           t154) +
          t176) +
         t177) +
        t183) +
       t185) /
      25.0;
  B_tau[37] =
      t137 *
      (((((((((((((t4 - t124) + t127) + t143) + t146) + t147) + t155) + t165) +
            t174) -
           t175) -
          t172) +
         t182) -
        t179) -
       xi[5] * t49 * 14700.0) *
      0.07;
  B_tau[38] =
      -(t12 - 0.21) * t137 *
      (((((((((t26 + 1319.4689145077132) - t18) - t41) + t113) + t33 * t49) +
          t129) -
         t149) +
        t171) -
       t2 * t49 * 4900.0);
  B_tau[39] = t137 * ((((-xi[3] - t3) + t96) + t213) + t225) * -4900.0;
  B_tau[40] = t137 * (((t102_tmp - t107) + t219) + t224) * -4900.0;
  B_tau[41] = t137 * ((t190_tmp_tmp + t218) + 1.0) * 4900.0;
}

Eigen::MatrixXd autogen2Eigen(double _Btau[42])
{
    // Try to well write in a decent matrix
    Eigen::MatrixXd Btau(7, 6);
    Btau << _Btau[0], _Btau[1], _Btau[2], _Btau[3], _Btau[4], _Btau[5], _Btau[6],
            _Btau[7], _Btau[8], _Btau[9], _Btau[10], _Btau[11], _Btau[12], _Btau[13],
            _Btau[14], _Btau[15], _Btau[16], _Btau[17], _Btau[18], _Btau[19], _Btau[20],
            _Btau[21], _Btau[22], _Btau[23], _Btau[24], _Btau[25], _Btau[26], _Btau[27],
            _Btau[28], _Btau[29], _Btau[30], _Btau[31], _Btau[32], _Btau[33], _Btau[34],
            _Btau[35], _Btau[36], _Btau[37], _Btau[38], _Btau[39], _Btau[40], _Btau[41];
    return Btau.transpose();
}

Eigen::MatrixXd get_ActMat(Eigen::VectorXd xi_eigen, double X)
{
    double xi[6] = {xi_eigen(0), xi_eigen(1), xi_eigen(2), xi_eigen(3), xi_eigen(4), xi_eigen(5)};
    double Btau[42];
    B_tau_sol1(xi, X, Btau);
    return autogen2Eigen(Btau);
}